name: Django CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.12]

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    - name: Migrate Database
      env:
        SECRET_KEY: ${{ secrets.SECRET_KEY }}
        CELERY_BROKER_URL: ${{ secrets.CELERY_BROKER_URL }}
        CELERY_RESULT_BACKEND: ${{ secrets.CELERY_RESULT_BACKEND }}
        REDIS_HOST: ${{ secrets.REDIS_HOST }}
        REDIS_BACKEND: ${{ secrets.REDIS_BACKEND }}
        OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        TOMORROWIO_API_KEY: ${{ secrets.TOMORROWIO_API_KEY }}
        MAPBOX_ACCESS_TOKEN: ${{ secrets.MAPBOX_ACCESS_TOKEN }}
        EMAIL_HOST_USER: ${{ secrets.EMAIL_HOST_USER }}
        EMAIL_HOST_PASSWORD: ${{ secrets.EMAIL_HOST_PASSWORD }}
        OPENWEATHERMAP_API_KEY: ${{ secrets.OPENWEATHERMAP_API_KEY }}
        GOOGLE_PROJECT_ID: ${{ secrets.GOOGLE_PROJECT_ID }}
        GOOGLE_PLACES_API_KEY: ${{ secrets.GOOGLE_PLACES_API_KEY }}
      run: |
        python manage.py makemigrations
        python manage.py migrate
    - name: Run Tests
      env:
          SECRET_KEY: ${{ secrets.SECRET_KEY }}
          CELERY_BROKER_URL: ${{ secrets.CELERY_BROKER_URL }}
          CELERY_RESULT_BACKEND: ${{ secrets.CELERY_RESULT_BACKEND }}
          REDIS_HOST: ${{ secrets.REDIS_HOST }}
          REDIS_BACKEND: ${{ secrets.REDIS_BACKEND }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          TOMORROWIO_API_KEY: ${{ secrets.TOMORROWIO_API_KEY }}
          MAPBOX_ACCESS_TOKEN: ${{ secrets.MAPBOX_ACCESS_TOKEN }}
          EMAIL_HOST_USER: ${{ secrets.EMAIL_HOST_USER }}
          EMAIL_HOST_PASSWORD: ${{ secrets.EMAIL_HOST_PASSWORD }}
          OPENWEATHERMAP_API_KEY: ${{ secrets.OPENWEATHERMAP_API_KEY }}
          GOOGLE_PROJECT_ID: ${{ secrets.GOOGLE_PROJECT_ID }}
          GOOGLE_PLACES_API_KEY: ${{ secrets.GOOGLE_PLACES_API_KEY }}
      run: |
        python manage.py test
    - name: Run Django application
      env:
        SECRET_KEY: ${{ secrets.SECRET_KEY }}
        CELERY_BROKER_URL: ${{ secrets.CELERY_BROKER_URL }}
        CELERY_RESULT_BACKEND: ${{ secrets.CELERY_RESULT_BACKEND }}
        REDIS_HOST: ${{ secrets.REDIS_HOST }}
        REDIS_BACKEND: ${{ secrets.REDIS_BACKEND }}
        OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        TOMORROWIO_API_KEY: ${{ secrets.TOMORROWIO_API_KEY }}
        MAPBOX_ACCESS_TOKEN: ${{ secrets.MAPBOX_ACCESS_TOKEN }}
        EMAIL_HOST_USER: ${{ secrets.EMAIL_HOST_USER }}
        EMAIL_HOST_PASSWORD: ${{ secrets.EMAIL_HOST_PASSWORD }}
        OPENWEATHERMAP_API_KEY: ${{ secrets.OPENWEATHERMAP_API_KEY }}
        GOOGLE_PROJECT_ID: ${{ secrets.GOOGLE_PROJECT_ID }}
        GOOGLE_PLACES_API_KEY: ${{ secrets.GOOGLE_PLACES_API_KEY }}
      run: |
        python manage.py runserver
